<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0210.2209                               -->
<workbook original-version='10.5' source-build='10.5.1 (10500.18.0210.2209)' source-platform='mac' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='match106' inline='true' name='federated.0nni6n804ekyoy0zwohvg107ltx6' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='match106' name='semistructpassivestore-direct.1ybpm221oix1a012ff7du0sgrkol'>
            <connection class='semistructpassivestore-direct' directory='/Users/maxgoeke/Desktop' filename='match106.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[match106.json]'>
                  <map key='_id' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1ybpm221oix1a012ff7du0sgrkol' name='match106.json' table='[match106.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoCross</remote-name>
            <remote-type>130</remote-type>
            <local-name>[autoCross]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>autoCross</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoScale</remote-name>
            <remote-type>130</remote-type>
            <local-name>[autoScale]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>autoScale</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSwitch</remote-name>
            <remote-type>130</remote-type>
            <local-name>[autoSwitch]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>autoSwitch</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>climbMech</remote-name>
            <remote-type>130</remote-type>
            <local-name>[climbMech]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>climbMech</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homeSwitch-count</remote-name>
            <remote-type>130</remote-type>
            <local-name>[homeSwitch-count]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>homeSwitch-count</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>matchNum</remote-name>
            <remote-type>130</remote-type>
            <local-name>[matchNum]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>matchNum</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>opposingSwitch-count</remote-name>
            <remote-type>130</remote-type>
            <local-name>[opposingSwitch-count]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>opposingSwitch-count</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scale-count</remote-name>
            <remote-type>130</remote-type>
            <local-name>[scale-count]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>scale-count</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scoutComments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[scoutComments]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>scoutComments</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scoutName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[scoutName]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>scoutName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>teamNum</remote-name>
            <remote-type>130</remote-type>
            <local-name>[teamNum]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>teamNum</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaultCount</remote-name>
            <remote-type>130</remote-type>
            <local-name>[vaultCount]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>vaultCount</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winLoss</remote-name>
            <remote-type>130</remote-type>
            <local-name>[winLoss]</local-name>
            <parent-name>[match106.json]</parent-name>
            <remote-alias>winLoss</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Team Groups' datatype='string' name='[Good]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[teamNum]' new-bin='true'>
          <bin default-name='false' value='&quot;A1&quot;'>
            <value>&quot;1723&quot;</value>
            <value>&quot;1986&quot;</value>
            <value>&quot;3284&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;A2&quot;'>
            <value>&quot;1764&quot;</value>
            <value>&quot;1825&quot;</value>
            <value>&quot;1987&quot;</value>
            <value>&quot;5013&quot;</value>
            <value>&quot;5801&quot;</value>
            <value>&quot;5809&quot;</value>
            <value>&quot;5889&quot;</value>
            <value>&quot;6886&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;A3&quot;'>
            <value>&quot;1763&quot;</value>
            <value>&quot;1802&quot;</value>
            <value>&quot;2164&quot;</value>
            <value>&quot;2352&quot;</value>
            <value>&quot;2457&quot;</value>
            <value>&quot;5126&quot;</value>
            <value>&quot;5968&quot;</value>
            <value>&quot;6805&quot;</value>
            <value>&quot;6976&quot;</value>
            <value>&quot;932&quot;</value>
            <value>&quot;935&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Bad&quot;'>
            <value>&quot;1288&quot;</value>
            <value>&quot;1737&quot;</value>
            <value>&quot;1769&quot;</value>
            <value>&quot;1775&quot;</value>
            <value>&quot;1827&quot;</value>
            <value>&quot;1997&quot;</value>
            <value>&quot;2345&quot;</value>
            <value>&quot;2357&quot;</value>
            <value>&quot;2560&quot;</value>
            <value>&quot;2874&quot;</value>
            <value>&quot;3172&quot;</value>
            <value>&quot;4809&quot;</value>
            <value>&quot;5082&quot;</value>
            <value>&quot;5098&quot;</value>
            <value>&quot;5141&quot;</value>
            <value>&quot;5189&quot;</value>
            <value>&quot;6542&quot;</value>
            <value>&quot;6542 &quot;</value>
            <value>&quot;6817&quot;</value>
            <value>&quotquot;</value>
            <value>&quot;7064&quot;</value>
            <value>&quot;937&quot;</value>
            <value>&quot;938&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Non Existent&quot;'>
            <value>&quot;1286&quot;</value>
            <value>&quot;2474&quot;</value>
            <value>&quot;2550&quot;</value>
            <value>&quot;3264&quot;</value>
            <value>&quot;5147&quot;</value>
            <value>&quot;5198&quot;</value>
            <value>&quot;582&quot;</value>
            <value>&quot;6887&quot;</value>
            <value>&quot;953&quot;</value>
            <value>&quot;`3284&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Type Groups]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[teamNum]' new-bin='true'>
          <bin default-name='false' value='&quot;Solely Scale&quot;'>
            <value>&quot;1987&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Solely Switch&quot;'>
            <value>&quot;1825&quot;</value>
            <value>&quot;2164&quot;</value>
            <value>&quot;5126&quot;</value>
            <value>&quot;6976&quot;</value>
            <value>&quotquot;</value>
          </bin>
          <bin default-name='false' value='&quot;Switch and Scale&quot;'>
            <value>&quot;1723&quot;</value>
            <value>&quot;1763&quot;</value>
            <value>&quot;1764&quot;</value>
            <value>&quot;1986&quot;</value>
            <value>&quot;2352&quot;</value>
            <value>&quot;2457&quot;</value>
            <value>&quot;3284&quot;</value>
            <value>&quot;5801&quot;</value>
            <value>&quot;5809&quot;</value>
            <value>&quot;5889&quot;</value>
            <value>&quot;6886&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Auto Cross' datatype='string' name='[autoCross]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>autoCross</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Auto Scale' datatype='string' name='[autoScale]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>autoScale</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Auto Switch' datatype='string' name='[autoSwitch]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>autoSwitch</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Climb Mech' datatype='string' name='[climbMech]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>climbMech</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[homeSwitch-count]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>homeSwitch-count</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Match Num' datatype='string' name='[matchNum]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>matchNum</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[opposingSwitch-count]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>opposingSwitch-count</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Scale-Count' datatype='string' name='[scale-count]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>scale-count</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Scout Comments' datatype='string' name='[scoutComments]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>scoutComments</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Scout Name' datatype='string' name='[scoutName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>scoutName</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Team Num' datatype='string' name='[teamNum]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>teamNum</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vault Count' datatype='string' name='[vaultCount]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>vaultCount</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Win Loss' datatype='string' name='[winLoss]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>winLoss</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Match106' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[autoCross]' type='field' />
        <folder-item name='[autoScale]' type='field' />
        <folder-item name='[autoSwitch]' type='field' />
        <folder-item name='[climbMech]' type='field' />
        <folder-item name='[homeSwitch-count]' type='field' />
        <folder-item name='[matchNum]' type='field' />
        <folder-item name='[opposingSwitch-count]' type='field' />
        <folder-item name='[scale-count]' type='field' />
        <folder-item name='[scoutComments]' type='field' />
        <folder-item name='[scoutName]' type='field' />
        <folder-item name='[teamNum]' type='field' />
        <folder-item name='[vaultCount]' type='field' />
        <folder-item name='[winLoss]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.792388' measure-ordering='alphabetic' measure-percentage='0.207612' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Auto Cross'>
      <table>
        <view>
          <datasources>
            <datasource caption='match106' name='federated.0nni6n804ekyoy0zwohvg107ltx6' />
          </datasources>
          <datasource-dependencies datasource='federated.0nni6n804ekyoy0zwohvg107ltx6'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Auto Cross' datatype='string' name='[autoCross]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>autoCross</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[autoCross]' derivation='None' name='[none:autoCross:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamNum]' derivation='None' name='[none:teamNum:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Team Num' datatype='string' name='[teamNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>teamNum</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
              <text column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]</rows>
        <cols>([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoCross:nk] / [federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Auto Scale'>
      <table>
        <view>
          <datasources>
            <datasource caption='match106' name='federated.0nni6n804ekyoy0zwohvg107ltx6' />
          </datasources>
          <datasource-dependencies datasource='federated.0nni6n804ekyoy0zwohvg107ltx6'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Auto Scale' datatype='string' name='[autoScale]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>autoScale</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[autoScale]' derivation='None' name='[none:autoScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamNum]' derivation='None' name='[none:teamNum:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Team Num' datatype='string' name='[teamNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>teamNum</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
              <text column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]</rows>
        <cols>([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoScale:nk] / [federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Auto Switch'>
      <table>
        <view>
          <datasources>
            <datasource caption='match106' name='federated.0nni6n804ekyoy0zwohvg107ltx6' />
          </datasources>
          <datasource-dependencies datasource='federated.0nni6n804ekyoy0zwohvg107ltx6'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Auto Switch' datatype='string' name='[autoSwitch]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>autoSwitch</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[autoSwitch]' derivation='None' name='[none:autoSwitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamNum]' derivation='None' name='[none:teamNum:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Team Num' datatype='string' name='[teamNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>teamNum</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
              <text column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]</rows>
        <cols>([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoSwitch:nk] / [federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Climb'>
      <table>
        <view>
          <datasources>
            <datasource caption='match106' name='federated.0nni6n804ekyoy0zwohvg107ltx6' />
          </datasources>
          <datasource-dependencies datasource='federated.0nni6n804ekyoy0zwohvg107ltx6'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Climb Mech' datatype='string' name='[climbMech]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>climbMech</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[climbMech]' derivation='None' name='[none:climbMech:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamNum]' derivation='None' name='[none:teamNum:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Team Num' datatype='string' name='[teamNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>teamNum</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:climbMech:nk]' />
              <text column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:climbMech:nk] * [federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk])</rows>
        <cols>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Groupings'>
      <table>
        <view>
          <datasources>
            <datasource caption='match106' name='federated.0nni6n804ekyoy0zwohvg107ltx6' />
          </datasources>
          <datasource-dependencies datasource='federated.0nni6n804ekyoy0zwohvg107ltx6'>
            <column caption='Team Groups' datatype='string' name='[Good]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[teamNum]' new-bin='true'>
                <bin default-name='false' value='&quot;A1&quot;'>
                  <value>&quot;1723&quot;</value>
                  <value>&quot;1986&quot;</value>
                  <value>&quot;3284&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;A2&quot;'>
                  <value>&quot;1764&quot;</value>
                  <value>&quot;1825&quot;</value>
                  <value>&quot;1987&quot;</value>
                  <value>&quot;5013&quot;</value>
                  <value>&quot;5801&quot;</value>
                  <value>&quot;5809&quot;</value>
                  <value>&quot;5889&quot;</value>
                  <value>&quot;6886&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;A3&quot;'>
                  <value>&quot;1763&quot;</value>
                  <value>&quot;1802&quot;</value>
                  <value>&quot;2164&quot;</value>
                  <value>&quot;2352&quot;</value>
                  <value>&quot;2457&quot;</value>
                  <value>&quot;5126&quot;</value>
                  <value>&quot;5968&quot;</value>
                  <value>&quot;6805&quot;</value>
                  <value>&quot;6976&quot;</value>
                  <value>&quot;932&quot;</value>
                  <value>&quot;935&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Bad&quot;'>
                  <value>&quot;1288&quot;</value>
                  <value>&quot;1737&quot;</value>
                  <value>&quot;1769&quot;</value>
                  <value>&quot;1775&quot;</value>
                  <value>&quot;1827&quot;</value>
                  <value>&quot;1997&quot;</value>
                  <value>&quot;2345&quot;</value>
                  <value>&quot;2357&quot;</value>
                  <value>&quot;2560&quot;</value>
                  <value>&quot;2874&quot;</value>
                  <value>&quot;3172&quot;</value>
                  <value>&quot;4809&quot;</value>
                  <value>&quot;5082&quot;</value>
                  <value>&quot;5098&quot;</value>
                  <value>&quot;5141&quot;</value>
                  <value>&quot;5189&quot;</value>
                  <value>&quot;6542&quot;</value>
                  <value>&quot;6542 &quot;</value>
                  <value>&quot;6817&quot;</value>
                  <value>&quotquot;</value>
                  <value>&quot;7064&quot;</value>
                  <value>&quot;937&quot;</value>
                  <value>&quot;938&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Non Existent&quot;'>
                  <value>&quot;1286&quot;</value>
                  <value>&quot;2474&quot;</value>
                  <value>&quot;2550&quot;</value>
                  <value>&quot;3264&quot;</value>
                  <value>&quot;5147&quot;</value>
                  <value>&quot;5198&quot;</value>
                  <value>&quot;582&quot;</value>
                  <value>&quot;6887&quot;</value>
                  <value>&quot;953&quot;</value>
                  <value>&quot;`3284&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Auto Cross' datatype='string' name='[autoCross]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>autoCross</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Auto Scale' datatype='string' name='[autoScale]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>autoScale</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Auto Switch' datatype='string' name='[autoSwitch]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>autoSwitch</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Climb Mech' datatype='string' name='[climbMech]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>climbMech</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[homeSwitch-count]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>homeSwitch-count</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Match Num' datatype='string' name='[matchNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>matchNum</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[autoCross]' derivation='None' name='[none:autoCross:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoScale]' derivation='None' name='[none:autoScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSwitch]' derivation='None' name='[none:autoSwitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[climbMech]' derivation='None' name='[none:climbMech:nk]' pivot='key' type='nominal' />
            <column-instance column='[homeSwitch-count]' derivation='None' name='[none:homeSwitch-count:nk]' pivot='key' type='nominal' />
            <column-instance column='[matchNum]' derivation='None' name='[none:matchNum:nk]' pivot='key' type='nominal' />
            <column-instance column='[opposingSwitch-count]' derivation='None' name='[none:opposingSwitch-count:nk]' pivot='key' type='nominal' />
            <column-instance column='[scale-count]' derivation='None' name='[none:scale-count:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamNum]' derivation='None' name='[none:teamNum:nk]' pivot='key' type='nominal' />
            <column-instance column='[vaultCount]' derivation='None' name='[none:vaultCount:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[opposingSwitch-count]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>opposingSwitch-count</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Scale-Count' datatype='string' name='[scale-count]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>scale-count</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Team Num' datatype='string' name='[teamNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>teamNum</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Vault Count' datatype='string' name='[vaultCount]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>vaultCount</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[Good]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Good]' member='&quot;A1&quot;' />
              <groupfilter function='member' level='[Good]' member='&quot;A2&quot;' />
              <groupfilter function='member' level='[Good]' member='&quot;A3&quot;' />
              <groupfilter function='member' level='[Good]' member='&quot;Bad&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0nni6n804ekyoy0zwohvg107ltx6].[Good]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:climbMech:nk]' value='14' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:matchNum:nk]' />
              <lod column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]' />
              <color column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk] / ([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoCross:nk] / ([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoSwitch:nk] / ([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoScale:nk] / ([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:scale-count:nk] / ([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:homeSwitch-count:nk] / ([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:opposingSwitch-count:nk] / ([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:vaultCount:nk] / [federated.0nni6n804ekyoy0zwohvg107ltx6].[none:climbMech:nk]))))))))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scale'>
      <table>
        <view>
          <datasources>
            <datasource caption='match106' name='federated.0nni6n804ekyoy0zwohvg107ltx6' />
          </datasources>
          <datasource-dependencies datasource='federated.0nni6n804ekyoy0zwohvg107ltx6'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[scale-count]' derivation='None' name='[none:scale-count:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamNum]' derivation='None' name='[none:teamNum:nk]' pivot='key' type='nominal' />
            <column caption='Scale-Count' datatype='string' name='[scale-count]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>scale-count</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Team Num' datatype='string' name='[teamNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>teamNum</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
              <text column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]</rows>
        <cols>([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:scale-count:nk] / [federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Switch'>
      <table>
        <view>
          <datasources>
            <datasource caption='match106' name='federated.0nni6n804ekyoy0zwohvg107ltx6' />
          </datasources>
          <datasource-dependencies datasource='federated.0nni6n804ekyoy0zwohvg107ltx6'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[homeSwitch-count]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>homeSwitch-count</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[homeSwitch-count]' derivation='None' name='[none:homeSwitch-count:nk]' pivot='key' type='nominal' />
            <column-instance column='[opposingSwitch-count]' derivation='None' name='[none:opposingSwitch-count:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamNum]' derivation='None' name='[none:teamNum:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[opposingSwitch-count]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>opposingSwitch-count</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Team Num' datatype='string' name='[teamNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>teamNum</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:opposingSwitch-count:nk]' />
              <color column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]</rows>
        <cols>([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:homeSwitch-count:nk] / [federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Type-Groupings'>
      <table>
        <view>
          <datasources>
            <datasource caption='match106' name='federated.0nni6n804ekyoy0zwohvg107ltx6' />
          </datasources>
          <datasource-dependencies datasource='federated.0nni6n804ekyoy0zwohvg107ltx6'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Type Groups]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[teamNum]' new-bin='true'>
                <bin default-name='false' value='&quot;Solely Scale&quot;'>
                  <value>&quot;1987&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solely Switch&quot;'>
                  <value>&quot;1825&quot;</value>
                  <value>&quot;2164&quot;</value>
                  <value>&quot;5126&quot;</value>
                  <value>&quot;6976&quot;</value>
                  <value>&quotquot;</value>
                </bin>
                <bin default-name='false' value='&quot;Switch and Scale&quot;'>
                  <value>&quot;1723&quot;</value>
                  <value>&quot;1763&quot;</value>
                  <value>&quot;1764&quot;</value>
                  <value>&quot;1986&quot;</value>
                  <value>&quot;2352&quot;</value>
                  <value>&quot;2457&quot;</value>
                  <value>&quot;3284&quot;</value>
                  <value>&quot;5801&quot;</value>
                  <value>&quot;5809&quot;</value>
                  <value>&quot;5889&quot;</value>
                  <value>&quot;6886&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[homeSwitch-count]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>homeSwitch-count</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Match Num' datatype='string' name='[matchNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>matchNum</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[homeSwitch-count]' derivation='None' name='[none:homeSwitch-count:nk]' pivot='key' type='nominal' />
            <column-instance column='[matchNum]' derivation='None' name='[none:matchNum:nk]' pivot='key' type='nominal' />
            <column-instance column='[opposingSwitch-count]' derivation='None' name='[none:opposingSwitch-count:nk]' pivot='key' type='nominal' />
            <column-instance column='[scale-count]' derivation='None' name='[none:scale-count:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamNum]' derivation='None' name='[none:teamNum:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[opposingSwitch-count]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>opposingSwitch-count</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Scale-Count' datatype='string' name='[scale-count]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>scale-count</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Team Num' datatype='string' name='[teamNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>teamNum</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[Type Groups]'>
            <groupfilter function='member' level='[Type Groups]' member='&quot;Switch and Scale&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0nni6n804ekyoy0zwohvg107ltx6].[Type Groups]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='493' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:matchNum:nk]' />
              <lod column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]' />
              <color column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk] / ([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:scale-count:nk] / ([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:homeSwitch-count:nk] / [federated.0nni6n804ekyoy0zwohvg107ltx6].[none:opposingSwitch-count:nk])))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Vault'>
      <table>
        <view>
          <datasources>
            <datasource caption='match106' name='federated.0nni6n804ekyoy0zwohvg107ltx6' />
          </datasources>
          <datasource-dependencies datasource='federated.0nni6n804ekyoy0zwohvg107ltx6'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[teamNum]' derivation='None' name='[none:teamNum:nk]' pivot='key' type='nominal' />
            <column-instance column='[vaultCount]' derivation='None' name='[none:vaultCount:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Team Num' datatype='string' name='[teamNum]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>teamNum</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Vault Count' datatype='string' name='[vaultCount]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>vaultCount</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]</rows>
        <cols>([federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk] / [federated.0nni6n804ekyoy0zwohvg107ltx6].[none:vaultCount:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Scalez'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='84000' id='5' param='horz' type='layout-flow' w='84000' x='8000' y='8000'>
            <zone h='98000' id='3' type='layout-basic' w='86100' x='800' y='1000'>
              <zone h='49000' id='1' name='Scale' w='86100' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='Auto Scale' w='86100' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='123' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='12300' x='86900' y='1000'>
              <zone h='98000' id='6' name='Scale' pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' type='color' w='12300' x='86900' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Switchez'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='84000' id='5' param='horz' type='layout-flow' w='84000' x='8000' y='8000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Switch' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='8' name='Auto Switch' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='95250' id='6' name='Switch' pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2750' id='7' name='Switch' pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:opposingSwitch-count:nk]' type='size' w='16000' x='83200' y='96250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Scale'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]'>
          <color-one-way>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:scale-count:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;1737&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Switch'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]'>
          <color-one-way>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:homeSwitch-count:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:opposingSwitch-count:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;1737&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Vault'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]'>
          <color-one-way>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:vaultCount:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;2345&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Climb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:climbMech:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:climbMech:nk]</field>
                    <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:climbMech:nk]</field>
                  <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
                  <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>%null%</value>
                <value>&quot;5098&quot;</value>
                <value>9</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:climbMech:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Auto Cross'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]'>
          <color-one-way>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoCross:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;2345&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Auto Scale'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoScale:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:scale-count:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Auto Switch'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]'>
          <color-one-way>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoSwitch:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;6976&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Scalez'>
      <viewpoints>
        <viewpoint name='Auto Scale'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Scale'>
          <zoom type='entire-view' />
          <highlight field='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]'>
            <color-one-way>
              <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;935&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Switchez'>
      <viewpoints>
        <viewpoint name='Auto Switch'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Switch'>
          <zoom type='entire-view' />
          <highlight field='[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]'>
            <color-one-way>
              <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;1763&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Groupings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[Good]' type='filter' />
            <card pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[Good]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoCross:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoScale:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:autoSwitch:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:climbMech:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:homeSwitch-count:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:matchNum:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:opposingSwitch-count:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:scale-count:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:vaultCount:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Type-Groupings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[Type Groups]' type='filter' />
            <card pane-specification-id='0' param='[federated.0nni6n804ekyoy0zwohvg107ltx6].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[Type Groups]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:homeSwitch-count:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:matchNum:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:opposingSwitch-count:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:scale-count:nk]</field>
            <field>[federated.0nni6n804ekyoy0zwohvg107ltx6].[none:teamNum:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Auto Scale' width='384'>
      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
      fvhh2+suTXp6Orfffjuenp74+fmh1Wrx9/e3dZxfjdlsxmq1XtZU5ObmRnR0NGfPniU6OrrU
      8iIjI9m5cyfR0dEMHjyYDz74gNzcXDp16nRFeRV5X6zq36+z2Gxlw/Gy97G4qHU9d5oF2a+J
      sn379ixdupTOnTuzdOlSZsyYQWFhId7e3tXyPTh79iw9e/bEz8/PNqBEq9Xav7zytnarV3/f
      0tLSqFevHu7u7ri5uREaGoqiKISGhlJcXFzqwnVhYWEsWrSI/Px8AgIC+PTTT2nRogXnz58n
      KCio1Nd48XNvtVpJTk7m9ttvR6/XExYWRlZWluPWArro0up106ZN+frrr7FarRWaoODp7kW6
      4cI2jCVGI1bzhT07NRrNZZNAtFrtVdvZTFYrOcbyjfbRu+hx0V94Dp22/C/dRe9SLSNtKqpO
      nTpMnz6d3NxcHnroIVxcXDh8+DBt27a1W3yqVouloHzXU6Ni1+vStWtXdu/eTb9+/ejduzdL
      lizho48+QqfTlVlOt27d+Pjjj/H29iY0NJQNGzZw7tw52rRpU+p5Li4u3HbbbcycOZObbroJ
      d3d3UlNTOXv2LM8//3yZ5T3yyCPk5ubi4nLhc/HKK6+QkJCAj4/PFedVZH0Ynfbv12lVrBjL
      WXlQlat/NyrrtttuIzg4mAMHDvDqq68SEhKCxWK55nWprD59+jB37lwaNGhAw4YN+fbbb1FV
      lXr16tm1PKWck8oURblque3bt+ett94iISGBiIgIlixZQqNGjcjOziYwMLDUSWsuLi5MmzaN
      xMREmjZtSnJyMkePHmXChAll9uF4e3uTmprKlClTyMjIwM3NDUVRSElJISwszC7XpkoJ4JNP
      PrENRTObzYSHh5fZD2A2lWAwFmMsMaE1FFFQWER4ZCPWLd1IdLtIju/eTt3QG2NmY3UYPXo0
      qqpSWFho66S87bbbbKOwartu3brZdmHTaDQMGzaM8+fPX/NXYKdOnQgODkaj0RAaGsqWLVsI
      DQ29Zn/FnXfeSefOnTl58iQlJSVERkYyePDga/6ASU9PZ9GiRURHRxMeHs7y5csJCgoqc85B
      bWIwGPjpp5/w8vLC39+f//u//6O4uJgJEyZUy3ya8PBwXnrpJYxGI+Hh4cTExJCbm1tmLcwR
      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
      vWwwEFhOA83NzeXUbd++Hf39/RgbG2PvxcLCQsRkivLycgwMDGBoaIh1bczMzEQsr7Fz504M
      DQ2hr6+PTb6YnJzE1q1bOXW7du3CyMgIurq6WB2TbBDp+01PT6O9vZ3VDQ8P4xvf+AanbsuW
      LVhYWEBrayurY8724KKkpAR6vR5NTU3sMxLNfSkrK4NQKMQnn3wCjUaDS5cuobu7O+IBREVF
      RUhMTMSnn34KrVaLS5cuoa2tbdWzBDZMEHg1HgwKfx06YHmWECmY9DToHg5KRqvx+XyPvYv0
      wZ26j9tPJqMoWh1T9IxrAxFXP5nA7EbUAV8GIonuUV00AfmHiVT65avQMQF1Ho/3WL95NLoN
      bQAIBAKBEJ4N4wIiEAgEwuNBDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDE
      KMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxC
      DACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQA
      EAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACB
      QCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgE
      QoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDE
      KMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxC
      DACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQA
      EAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACB
      QCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgE
      QoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDE
      KMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKMQAEAgEQoxCDACBQCDEKP8f3xkTv4vf
      GE0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Groupings' width='384'>
      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
      wOKHeeTBxCgLWVBYhE6nkJQxhUeXL2ZQs2JMsWIzBln/tw2Yk41Mq1iKotMztbAQgNzCEkz6
      2PeEE+4D8Pv9BIPBWMQjSZKUECZDAZwJrwBUVcXv90/0I0mSJClByJ3A0qT09ehKUXTEOJ1K
      1H39lVQS7IVFjhnoEi2P9y0SQsPnC5CSkozP6yPJbI55LqDbujYJh4K43J5r/q3S29NNX//Q
      eGm+oN9Ld1cXw3bHeGrbgM9Dd1cX9jHnxE8sNMZGxwhfqYEXDgXx+SeegtLCKm1tHYCgq6WF
      4A3q5gV8Hjra23G4vTd8PUG/l/b2dsZcN24zmQktTF9PF739gyRSNx9W/Wx5fz1vvvEXtnxR
      Of65SQQt507x+uuv8+e/vE1Hf+Lk01H9bjZtfIc3/vI623YfTagsrjs+fIdT51oBCLpGOHCs
      esJ2YdXPzu07ATi0/VMck6ckpKDjUgNvvfE6H+/YB0DIP8bbb77Jseoa9u/ezvY9J/A7R3jn
      r29z6nQt2z/+gKM153Hb+3jrrb9Rc6aWrZs2Un2u7fqn17z8z//531SfjbyJg11NHKu+MGEk
      YdXPiaORnNtnjlTinWBXoepz8t67f+NMXT3v/vVv9I+6r/+TqpcNb7xJXcNZNrzzJn2jnuuf
      aFITHNv7Obv2H2XP559yoPpsrAOKmvM1h9HlVvDb3/0OxX6RS93xu8ridmhBN7v2n+SlX7zG
      j9Y+wu49+xLmRFlXdRDrtEX87ne/xdtdS+vA9d/JycrhcXCsci+eQAgtFGRwZBihhXG6Iq8x
      rAZwuX0gBCFVBUBVg3GRy/yWrwBGHQHWPvtdlCsvQFH0PP+Tl/nRD17gxZ88T3fLZYb6u8gs
      mcsLL3yfH3z/Gdo7WhjpbSN/9hJeeP77rFu7iqaLrRM8uyCvsJzTR/fjDYYQmkZI0wgHvFxo
      irT3OYdoau+LNP86pTbKhBtL2i/Vk122hHUvPM/aJ+Zxoub8dW26LtaTMXspzz/3HN9btZTj
      pxKn/ipAyOegoXWEn7/0U1762YtcOFOdMOUFe7t7eHDJYnQ6PQ8uWkB3R2esg4oKn2MEW1Ep
      NouZ3OIykn0OArEfJEaBYGBgkIUL56HTG3lowVy6OrtiHVTUGFNsLJ1TwJFTjeOPqZ4xdu07
      AIBjsIW9J87FKrybusUOQGHh0iVk2yzjJ1x9koX8nHQ8o0O8v/EjFj28lPxp5bhaG/ho8xY2
      fLyVBYsWkTe9guFLR9n0yRbe/ehLli2bP+FfMKXaWF4xlSM1V9/EUMBDXWNk5Op1DNDY0ntL
      0Y4ND1M0vRiAvMLphFzXJ2castspKShBUaC4dBoOh+vW3opJIuD1YMnJIsmgw2S2kptEgpxM
      IOAPYDBGPrrJpiQgMV6YGlTR6SODGkXRk2xQ4mGQGBXBQBC9IXLMzKYkhEiMYxYhWLj8Cdob
      jjHmvTp1fe1rjNcp2DtfnyQE3S3neOudD3joqXWsXDiLkf5OhDWfR1euYMWSRVxovMxQVyum
      zJLIYw/NpvHCjYsjL1r5BK21x7/xJt4JnU6HuDIvLDQNbYKdJ4pOj+Bqm0S7LfXNG4iCcBwk
      nooOhXRbOsODkfnxvsF+TGZrjGOKDnNaGu5RJ2EhCAXc2AM6DAnxwVRIs6QyOuIEIegZ6Mds
      tsQ6qKjSm1J4YtkcKo/VxDqU23LHHUBY9bB5y25e+effMre8CEVRsA/1kT+9gsKp+cybN5eB
      /l4Ge3qYPnsuU6dOZd7ChQx0tCGEIBAIXPecelMaTyydzcGjp8cf07TIao+QGrphLJoWJnjN
      zzOnTKHl4mWEEHS2XCIlO//K37zaseTnZtHU3IQQguZLTWRnZ97pWxGXklItuAYGcAdC+Jwj
      DIeMJMfvcuTbMn/REg58vpkzZ05xqPoCC+ZMi3VIUZFkzSWLUfZUHmHnZ9sonl2BMSE6AJi/
      cBF7d3zC6dPVHK9vZ+4DhbEOKYoiB2nmwuW4ei/j8odR9HqG+3qpratlz57D4y3Ftb8TB8dW
      //vf//73/6iRCAXYvvVjqk7V0t3dTVtrMxZzEifqztHVdpmamho6B5w8tHghR/d9TmNTC1XH
      T7HkkcepeGA6+3d+xsXmFqqqTrLiqTWkG9z8acMOVi5d+PUfoPFiF/PnzSR7Sj5nju0jo2g2
      5dNyOXHkIJeaWzlTe5bMghmUFWTR3NxJxZwHaDl/gWlz59FWd5jDZ3uYU14CgNWWxdljX3Gm
      8QIX2/r53rPP4Btu491PD7Bs8VwA0jJzqD+2l/rzl6hv7uOF576L2aS/a2/0vaYzJGFS7ezY
      vZ+6mhqWPbmGwtzEKMRtttgoLcph2O7msdXPkG1NiXVI0aEolM+uwOuwY5s6g4eXLIj5MsFo
      ScvIoTAvA7vDx6qn12BLoJKQuVPysFgs6HQGyspnUlJcRIYtk6K8bBwuPxULFzOjeCppqSnk
      5eWRmpZK1pR8MiyWmB/fqO8DEELD7/NjMCVhNOjHH/P5/JiSkjDo9Rz/aivJpctZPLPgHz5f
      OKQSCIYwm803XO+96d03Wf3DX5BtufqhEloYt8dLckoqRr2Oys83kTtvFXOmXVNjVWi4XG6S
      U9Mw6hNkePx3fF4P6AyYk5NiHcodGR0dZWRkJNZhSFJCislGsGAwiMlkuqfPF+2/KUmSNNnF
      ZNgb7RPxrTyfPPknFiEE/b294xsQE4UWCtLYUMvFy20k0P42AIb7uqipOY3De/39v8lsqL8X
      XyByD1ILqYyMTrzhVQsFaag/Bwgu1dfhC8d+JVRizntICc1jH2D9m6/zX3/4I2PB2H+Jokdj
      +6aNNHWNUF91gK+OnIl1QFEz1HGJdzd/jhrw8Jc/vYkvDurhRsun7/2Zj3fsRwgIuobZe+TI
      hO20sEpjfWRZe1P9GfxxsDFHdgDSpBMOCZ5Z9xLzygviYSFF1ASdQwwE0/j+2qf4wY9/SNv5
      +gTZvAe1Z06x9vmfsHzFozwyP5+GS5OrcMrNZEwtBXszHYNXq36F/G5O1TYA4Bnro/b8BBkQ
      4oDsAKRJx5qbR2GuLeE+vF63G2tWOnpFwZhsIcuooSZEByBwu9xkZmegKArF+VPxem6QF2wS
      Eig89fQq9u3bPz5tp6kBmtsiWQwCnlFae4ZjGOGNJdp3SJImLYNBP76BEaERUEXCXOEYjUY0
      LTLt4w+qKAl26sktmkW2MsrFjoFYh3JbEusoSPedhBggX2HOyGK0qx2HN8hIbxveJCtJCdED
      KOTmZnPu3EWECFPX0MjUon+8BHxyUXhy9WqOHqxE1SIlIVU1hBACjyt+E9/JkpDSpHOpoZoj
      J8/icPvYsmE95fOXsGr5wliH9a3pTRZWr5zPhxvXQzjM0+t+kjC1DhY9/AQff/AB689XY80t
      pywvMdJ3AGRlZaMoCtbcYhbMKmJIn4bBnIYx6GDje++hhYKUzFkBOh22rCwArFk5GOKgLsKE
      +wBUVSUUunHqBUmS7h41GETR6TEYEmdnOkQ2ZwbVEKakpISZ2roZoWmEwmGMRmOsQ7mhCTsA
      h8OB2x2/ly2SJEnStydLQkqSJN0DQkTuC5hMBtSgit5ojHkuoNu6CaxpYQLB4Df+7XI6cbk9
      43VMwyEVp9OJ1+cfz4EdUoM4HQ58/ujvAFSDfkZHRwmGJigNNt4mEGlzk4yiiUgIDZfTgdPl
      idt85HdKDUSOu3qT4z4ZCU3D6RjD5fYm1DETmkZvx2U+eP8j/ImzBwyAfTs2c645Uqsk6Bnj
      eE3dhO3Cqo+dO3YBcHDHNpxxsMb3Fm8CCwa729i1ezfCUsSvfvoc4YCL9zZ+iDClEPA4KJ33
      CKseLOX9995Db07HPTbGsiefZU6xlY0bP8acbsXlGOOxNT9gXll0VgCoXgdv/XU96bZMRj06
      fv3aS5iN35w3DXjG2PjORpIy0nH5NX75y1dITaCsnzcmqD22j+Nn29GpfhY/vpblC8piHVRU
      BNx23n5nA7asTEa9Rn7z6oskGRJhQZug+uBOzlweQPN7WPH0CyyeXRLroKKi63wde05fxNnX
      g6qRMKnJAXp7OzjX6aLst7+EoI/O3h4eFvNR1TAmkxFNCxMKC3RC4PdG6o/7vVcHzbF0y4eh
      pamDZStXol0ZxQsR5tHvruOXv3iZf371JZoa6hnobsVSMIdXXnmZn/34Wc5fOMdg5yVyHljK
      Ky+/zIsvPEVt7US1fgXdbU3s27eXhvOX0YRgbKiXltYWDh+s5OSZsxPmfKmvPszMpWv4+cu/
      YEGJkbqL3de1uXimiqKHHueVV15hUYmVM+cnKkmZeMJ+F8fr2nn1tdd49Vcvcer4IRKlJkxt
      1SHmrniWn/38F1TkaTQ098c6pKgIeUc5eX6Q1157lV+98mOqjh5OmHxARRUL+fUrPyXLYo51
      KFFnsmQzf3o6J+ovjz+mukfZtms3AI7+JnYemviqINZuuSTkw0+uojg/e/zuvSE5gxmFuYT8
      bj75aBOzFi0gr2g6Y63n+Hznl2z+7Asq5s0jt+QBBpuq+GLXl2zaup/FD8657tnH+lrZtquS
      aaXTOXeykprzXfQ2n2XnvuPk5BdwsfY47QN/X7JRMDI0SPkDMwAonzGLseHrTwQDdg/lJcWA
      wqzZs+gfSIwC4v+I3+MmI28KKSY9yWk2coxaglx6C+wjI8yYVQrAzLJZ2Af7YhxTdHidDnKK
      Ckgy6EjNyMVGgECCdACKLoGG/NcRLHtsNY3VlbgDV6eZNS0yPSmEiNukhXe+D0AIRvrbeXfj
      ZlauWcey+eXY+9sIJ6VRXlZGCn66OvspSvJCUgblZWUYg046u3uYOz3/G0/V1tbEkse/R9mM
      ArLNgn21l6jIhIefWMXsmYUMtzcRnmD+XghxzTppZcJdQYKrhXcUZeIi8onpm2+GEp+fvzsi
      xNUdsgl1PIW45gXdT5/Vyc+QbOWRhdM5XF3PZNq8ccfdshb2897GzfzTr/+N5QtmoigK/T1t
      lM5bzuxZ5Tz++KN0tbXQ1dLC/GUrmTWznMdWPUnnxcbrnstoMOLxRkb4Xq8HiKybFeMnsYnO
      XgqZ2dm0NXcC0N7RRpot97pWORnJtPVGrgxam1rIyUm/05c8qSSlpOIYHMIf0gj6XAwGdAky
      76pgy7TR3haZ7mttb8Oaef1xn4zMVisjPf0EwwK/y449nIRp8pxLbmqor5uz5xqxO52cP9dA
      d99QrEOKunnLHqO3qQ5XIIyiUxgZHKCltYUjh0+Mt7n2TBYPY7JbKwkZDrBrxzZOnq6jtbWd
      3t4uUk0Kh0+fZ3Swm9raWroGnCycO5u9X2yjo6eXo4ePMvvB5cx7YBpfbNtKd28/Rw4dZsGK
      J8lNC/PH9Vt5eElk96Ytw8bubZvpHRrmaFUdq9euRbV3o6bmUpBlpbPlMpbcYlprK2kcCDCj
      MPKFz8nN4fPN79Pd18v51kG+t/ZJBlrr2XH4LAtmR6aGbNlZfPnZFjq7OqlrH+a5NasT5Ibh
      zekMSWiOLr48WEX9qSrmrlhF6dScWIcVFTm52Wz/+H16+3q50GHnue8+gSEBphj0RjP+gSb2
      VZ3mzInjPPj4dyiakhi1ql3OEYZHHBRNn4ESUjFbM8iwpMY6rKiwpqdjs9nQ6Y2UlpaQl1dA
      dk4uWRYTHV0DlD4wh9LiAtItqaRn2MiwpZNqtZGZaUM/GUpCRtavqt+4a20wGL6xW1jR6TAa
      jIRDQVxOFyZzCinmZBQFVDUYKb1oTsWcnMzJfdsITZnPyvkzxn8/FAxgH3VgSc8gOcmE0MII
      RUGv0xEOhxBhlfc2bGTdz18lw3x1Z10w4GN0zEVGZiZJRgOffbie+avWMT3/av1b9UqbdFsm
      Sab7J/uFEBqO0VGEzkhGugVlEl2a3pQQkePucGPLysKUQDtmhaYxNmpHMSSRbk2blMdsdHSU
      sbGxWIch3YKYbARzu5ykpN1eQWShhfF4/aSl3XzU4HY5SU1LoJOdJE0ymqaNZ/6U4pvcCSxJ
      0j0gcDnGGBwexZadS2Z6WqwDihrHqJ3ktHSSjHq0cAiPL4glLeW6dlpYpaW1k/Ly6XRcvsyU
      6eUk6yfRTmBJkqQ7caH2GO9v2kbT5Uts/OvbtA8kTkGYLe/+kc++OjZeEnL3ocMTttNCQU5V
      VQPQUHU0Lspi3j8T4pIkxUxu0Ux+Pe9hjAYdWaYgnd0DTJuSGCmhU7PzcXaepXd0MVmKIBwO
      Ew54udDazdzZM/E5h2gfClJemBF3i3vlFYAkSXddVnYuBh00nq6i6mwX8ytKYx1S9OgMPLnq
      YfbtPzy+tDMc9HH2wnkAfK4hzrf2xi6+m5BXAJIk3XVaOMiurZ8wEk7h1d/8Bos5sU49heXz
      ST55ipbeyZW7SV4BSJJ01108cxSnPpeXX1yHJSUp1uHcBTpWr36SQ5UHx3NuhTUNIQTBQPSz
      IEdLYnXDkiTFpZ6ubvq7xnjzjWYAHn36eebOmBrjqKIjJSUFRVHIKiijNPcow0KPIclMwN7H
      Bx9+iHtshOL5j4GiYE6JLGNPMqehj9eSkJIkSXdK7gOI0MIhAmqY5OT4LYEprwAkSYoqh8OB
      w+GIdRjSLZBXAJIk3TNCCLivsvLGN3kFIEnS3ScEF+qqOXqyjmRrFut++EPSTHINSqz9fxQx
      sxHfvztRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Type-Groupings' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
